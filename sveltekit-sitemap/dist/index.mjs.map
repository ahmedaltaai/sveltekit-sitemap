{"version":3,"sources":["../src/utils.ts","../src/hook.ts","../src/plugin.ts"],"sourcesContent":["export const encodeXML = (str: string) => {\n  return str\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&apos;\");\n};\n","import type { Handle } from \"@sveltejs/kit\";\nimport type { SitemapParams, RO_Sitemap, RouteInfo, UserAgent } from \"./types\";\nimport { encodeXML } from \"./utils\";\n\nexport const sitemapHook =\n  <S extends RO_Sitemap>(sitemap: S, params: SitemapParams<S>): Handle =>\n  async ({ event, resolve }) => {\n    if (event.url.pathname === \"/sitemap.xml\") {\n      // Get dynamic custom infos for app routes\n      const infos = await params.getRoutes(event.locals);\n\n      // Instantiate a routes object with all the static routes\n      // The will be override if you pass custom settings\n      const routes: Record<string, RouteInfo<string>> = Object.keys(sitemap).reduce((acc, route) => {\n        const isDynamic = route.includes(\"[\");\n        if (!isDynamic) {\n          Object.assign(acc, { [route]: { path: route } });\n        }\n        return acc;\n      }, {});\n\n      // Add custom route data to the routes object\n      Object.entries(sitemap).forEach(([route]) => {\n        const routeInfo = infos[route as keyof typeof infos];\n        if (routeInfo) {\n          if (Array.isArray(routeInfo)) {\n            routeInfo.forEach((route) => {\n              Object.assign(routes, { [route.path]: route });\n            });\n          } else {\n            Object.assign(routes, { [routeInfo.path]: routeInfo });\n          }\n        }\n      });\n\n      // Build and return sitemap\n      // refs : https://github.com/sveltejs/kit/issues/1142#issuecomment-1032407693 https://github.com/Shopify/hydrogen/blob/1de3864214d04d9214e323d7f0a953c7b9309b7b/templates/demo-store/src/routes/sitemap.xml.server.ts\n\n      return new Response(\n        `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\"\nxmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"\nxmlns:image=\"http://www.google.com/schemas/sitemap-image/1.1\"\nxmlns:video=\"http://www.google.com/schemas/sitemap-video/1.1\"\nxmlns:news=\"http://www.google.com/schemas/sitemap-news/0.9\"\nxmlns:mobile=\"http://www.google.com/schemas/sitemap-mobile/1.0\"\nxmlns:pagemap=\"http://www.google.com/schemas/sitemap-pagemap/1.0\"\nxmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n${Object.values(routes)\n  .map(({ path, priority, changeFreq, image, lastMod }) => {\n    return `  <url>\n    <loc>${event.url.origin}${path}</loc>\n  </url>\n  ${lastMod ? `<lastmod>${lastMod}</lastmod>` : \"\"}\n  ${priority ? `<priority>${priority}</priority>` : \"\"}\n  ${changeFreq ? `<changefreq>${changeFreq}</changefreq>` : \"\"}\n  ${\n    image\n      ? `\n    <image:image>\n      <image:loc>${encodeXML(image.url)}</image:loc>\n      <image:title>${encodeXML(image.title ?? \" \")}</image:title>\n      <image:caption>${encodeXML(image.altText ?? \" \")}</image:caption>\n    </image:image>`\n      : \"\"\n  }`;\n  })\n  .join(\"\\n\")}\n</urlset>`,\n        {\n          status: 200,\n          headers: {\n            \"Content-Type\": \"application/xml\"\n          }\n        }\n      );\n    }\n\n    if (event.url.pathname === \"/robot.txt\") {\n      // Get dynamic robots directives\n      const robots = await params.getRobots(event.locals);\n      // Instantiate the agents to render array\n      const agentsToRender: { agent: string; crawlDelay?: number; allow: string[]; disallow: string[] }[] = [];\n\n      const parseAgent = (agent: UserAgent<S>) => {\n        const infos = Object.entries(agent.paths).reduce<{ allow: string[]; disallow: string[] }>(\n          (acc, [route, allow]) => {\n            if (allow) {\n              acc.allow.push(route);\n            } else {\n              acc.disallow.push(route);\n            }\n            return acc;\n          },\n          { allow: [], disallow: [] }\n        );\n\n        // Use the same config for all the user agents\n        if (Array.isArray(agent.userAgent)) {\n          agent.userAgent.forEach((a) => {\n            agentsToRender.push({\n              agent: a,\n              crawlDelay: agent.crawlDelay,\n              ...infos\n            });\n          });\n        } else {\n          agentsToRender.push({\n            agent: agent.userAgent || \"*\",\n            crawlDelay: agent.crawlDelay,\n            ...infos\n          });\n        }\n      };\n\n      // Build a default robot.txt for all user-agents\n      if (typeof robots === \"boolean\") {\n        agentsToRender.push({\n          agent: \"*\",\n          allow: robots === true ? [\"/\"] : [],\n          disallow: robots === false ? [\"/\"] : []\n        });\n      } else if (!Array.isArray(robots)) {\n        parseAgent(robots);\n      } else {\n        robots.forEach(parseAgent);\n      }\n\n      // Build a return the robots.txt\n      return new Response(\n        `${agentsToRender\n          .map(({ agent, crawlDelay, allow, disallow }) =>\n            `User-agent: ${agent}\nSitemap: ${event.url.origin}/sitemap.xml\n${crawlDelay ? `Crawl-delay: ${crawlDelay}` : \"\"}\n${allow.map((route) => `Allow: ${route}`).join(\"\\n\")}\n${disallow.map((route) => `Disallow: ${route}`).join(\"\\n\")}\n`\n              // Make it pretty\n              .replace(/\\n\\n/g, \"\\n\")\n              .replace(/\\n\\n/g, \"\\n\")\n          )\n          .join(\"\\n\")}\n`.trim(),\n        {\n          headers: {\n            \"content-type\": \"text/plain\",\n            // Cache it for 24 hours\n            \"cache-control\": `max-age=${60 * 60 * 24}`\n          }\n        }\n      );\n    }\n\n    return resolve(event);\n  };\n","import fs from \"fs\";\nimport type { ViteDevServer } from \"vite\";\nimport { Sitemap, SitemapPluginParams } from \"./types\";\n\nexport const getRoutes = (dir: string): Sitemap => {\n  let routes: Sitemap = {};\n  const traverseRoutes = (path: string) => {\n    const id = path.replace(dir, \"\").replace(\"/+page.svelte\", \"\");\n\n    if (fs.statSync(path).isDirectory()) {\n      fs.readdirSync(path).forEach((file) => traverseRoutes(path + \"/\" + file));\n    }\n\n    const dirBase = path.replace(\"/+page.svelte\", \"\");\n\n    const isFolder =\n      fs.statSync(dirBase).isDirectory() &&\n      fs.readdirSync(path.replace(\"/+page.svelte\", \"\")).some((p) => {\n        return fs.statSync(dirBase + \"/\" + p).isDirectory();\n      });\n    Object.assign(routes, { [id || \"/\"]: isFolder });\n  };\n  fs.readdirSync(dir).forEach((file) => traverseRoutes(dir + \"/\" + file));\n\n  return routes;\n};\n\nexport const sitemapPlugin = ({\n  routesDir = \"./src/routes\",\n  sitemapFile = \"./src/sitemap.ts\"\n}: SitemapPluginParams = {}) => {\n  function updateSitemap() {\n    fs.writeFileSync(\n      sitemapFile,\n      `import type { RO_Sitemap } from 'sveltekit-sitemap';\n\nexport const sitemap = (<const>${JSON.stringify(getRoutes(routesDir), null, 3).replace(\n        /\\uFFFF/g,\n        '\\\\\"'\n      )}) satisfies RO_Sitemap\n\nexport type Sitemap = typeof sitemap\n`\n    );\n  }\n  updateSitemap();\n\n  return {\n    name: \"sveltify-sitemap\",\n    configureServer(server: ViteDevServer) {\n      server.watcher\n        .add([routesDir])\n        .on(\"add\", updateSitemap)\n        .on(\"unlink\", updateSitemap)\n        .on(\"unlinkDir\", updateSitemap);\n    }\n  };\n};\n"],"mappings":"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","names":["encodeXML","str","sitemapHook","sitemap","params","_0","__async","event","resolve","infos","routes","acc","route","routeInfo","path","priority","changeFreq","image","lastMod","_a","_b","encodeXML","robots","agentsToRender","parseAgent","agent","allow","a","__spreadValues","crawlDelay","disallow","fs","getRoutes","dir","routes","traverseRoutes","path","id","file","dirBase","isFolder","p","sitemapPlugin","routesDir","sitemapFile","updateSitemap","server"]}